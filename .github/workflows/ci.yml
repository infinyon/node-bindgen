name: CI

on:
  push:
    branches:
      - staging
      - trying
  pull_request:
    branches: [ master ]

concurrency:
  group: ${{ github.head_ref || 'ci_staging' }}
  cancel-in-progress: true

jobs:
  rustfmt:
    name: Rustfmt (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        rust: [stable]
    steps:
      - uses: actions/checkout@v2
      - name: Install ${{ matrix.rust }}
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          override: true
      - name: check fmt
        run: make check-fmt RUSTV=${{ matrix.rust }}

  clippy:
    name: Clippy (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        rust: [stable]
    steps:
      - uses: actions/checkout@v2
      - name: Install ${{ matrix.rust }}
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          override: true
      - name: check clippy
        run: make check-clippy RUSTV=${{ matrix.rust }}

  test:
    name: Smoke test (${{ matrix.os }}, ${{ matrix.node }})
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]
        rust: [stable]
        node: [ '12', '14','16' ]
    steps:
    - uses: actions/checkout@v2
    - name: Install ${{ matrix.rust }}
      uses: actions-rs/toolchain@v1
      with:
        toolchain: ${{ matrix.rust }}
        override: true
    - name: Install nj-cli build
      run:  cargo install nj-cli
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - name: All Tests
      run: make test-all

  done:
    name: Done
    needs: [rustfmt, clippy, test]
    runs-on: ubuntu-latest
    steps:
      - run: echo "Done!"
